package windows;

import java.awt.event.KeyEvent;
import javax.swing.JButton;
import javax.swing.KeyStroke;
import settings.DefaultSettings;
import settings.Settings;

/**
 *
 * @author Bastiaan
 */
public class Window extends javax.swing.JFrame implements DefaultSettings {
    
    GamePanel game = new GamePanel();
    Thread thread = new Thread(game);
    public static Settings settings = new Settings();

    /**
     * Creates new form Window
     */
    public Window() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        buttonGroup1 = new javax.swing.ButtonGroup();
        multiplayer = new javax.swing.JButton();
        start = new javax.swing.JButton();
        gamePanel = game;
        optionsAI = new javax.swing.JLabel();
        mapOptions = new javax.swing.JLabel();
        desert = new javax.swing.JButton();
        boat = new javax.swing.JButton();
        controls = new javax.swing.JLabel();
        setWalkLeft = new javax.swing.JButton();
        setWalkRight = new javax.swing.JButton();
        setPunch = new javax.swing.JButton();
        setKick = new javax.swing.JButton();
        walkLeft = new javax.swing.JLabel();
        walkRight = new javax.swing.JLabel();
        punch = new javax.swing.JLabel();
        kick = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        city = new javax.swing.JButton();
        jRadioButton2 = new javax.swing.JRadioButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mortal Kombat XV");

        multiplayer.setText("Multiplayer");

        start.setText("Start game");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        gamePanel.setPreferredSize(new java.awt.Dimension(1152, 648));
        gamePanel.setRequestFocusEnabled(false);
        gamePanel.setVerifyInputWhenFocusTarget(false);

        javax.swing.GroupLayout gamePanelLayout = new javax.swing.GroupLayout(gamePanel);
        gamePanel.setLayout(gamePanelLayout);
        gamePanelLayout.setHorizontalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1152, Short.MAX_VALUE)
        );
        gamePanelLayout.setVerticalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 648, Short.MAX_VALUE)
        );

        optionsAI.setText("Bot opties");

        mapOptions.setText("Map opties");

        desert.setText("Desert");
        desert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desertActionPerformed(evt);
            }
        });

        boat.setText("Boat");
        boat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boatActionPerformed(evt);
            }
        });

        controls.setText("Controls");

        setWalkLeft.setText("A");
        setWalkLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setWalkLeftActionPerformed(evt);
            }
        });
        setWalkLeft.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                setWalkLeftKeyPressed(evt);
            }
        });
        setWalkLeft.getInputMap().put(KeyStroke.getKeyStroke("SPACE"), "none");

        setWalkRight.setText("D");
        setWalkRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setWalkRightActionPerformed(evt);
            }
        });
        setWalkRight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                setWalkRightKeyPressed(evt);
            }
        });
        setWalkRight.getInputMap().put(KeyStroke.getKeyStroke("SPACE"), "none");

        setPunch.setText("SPACE");
        setPunch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setPunchActionPerformed(evt);
            }
        });
        setPunch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                setPunchKeyPressed(evt);
            }
        });
        setPunch.getInputMap().put(KeyStroke.getKeyStroke("SPACE"), "none");

        setKick.setText("ENTER");
        setKick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setKickActionPerformed(evt);
            }
        });
        setKick.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                setKickKeyPressed(evt);
            }
        });
        setKick.getInputMap().put(KeyStroke.getKeyStroke("SPACE"), "none");

        walkLeft.setText("Walk left");

        walkRight.setText("Walk right");

        punch.setText("Punch");

        kick.setText("Kick");

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Super saiyan bot");

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("Bastiaan bot");

        buttonGroup1.add(jRadioButton4);
        jRadioButton4.setText("Milan bot ");

        city.setText("City");
        city.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Wahet op bot");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(1158, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(walkRight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(walkLeft, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(punch)
                            .addComponent(kick))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(setWalkLeft, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(setWalkRight, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(setPunch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(setKick, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(gamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(boat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(multiplayer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(start, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(desert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton3)
                            .addComponent(jRadioButton4)
                            .addComponent(city, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(mapOptions))
                            .addComponent(jRadioButton2)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(controls)
                                .addGap(28, 28, 28))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(optionsAI, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(gamePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(multiplayer, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(controls)
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(setWalkLeft)
                            .addComponent(walkLeft))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(setWalkRight)
                            .addComponent(walkRight))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(setPunch)
                            .addComponent(punch))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(setKick)
                            .addComponent(kick))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(mapOptions)
                        .addGap(11, 11, 11)
                        .addComponent(desert)
                        .addGap(18, 18, 18)
                        .addComponent(city)
                        .addGap(18, 18, 18)
                        .addComponent(boat)
                        .addGap(40, 40, 40)
                        .addComponent(optionsAI, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButton2)
                        .addGap(3, 3, 3)
                        .addComponent(jRadioButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButton4)
                        .addGap(21, 21, 21))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void setWalkLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setWalkLeftActionPerformed
        // TODO add your handling code here:
        setFocus(setWalkLeft);
    }//GEN-LAST:event_setWalkLeftActionPerformed

    private void setWalkLeftKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_setWalkLeftKeyPressed
        // TODO add your handling code here:
        setKeybinding(setWalkLeft, evt);
    }//GEN-LAST:event_setWalkLeftKeyPressed

    private void setWalkRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setWalkRightActionPerformed
        // TODO add your handling code here:
        setFocus(setWalkRight);
    }//GEN-LAST:event_setWalkRightActionPerformed

    private void setWalkRightKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_setWalkRightKeyPressed
        // TODO add your handling code here:
        setKeybinding(setWalkRight, evt);
    }//GEN-LAST:event_setWalkRightKeyPressed

    private void setPunchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setPunchActionPerformed
        // TODO add your handling code here:
        setFocus(setPunch);
    }//GEN-LAST:event_setPunchActionPerformed

    private void setPunchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_setPunchKeyPressed
        // TODO add your handling code here:
        setKeybinding(setPunch, evt);
    }//GEN-LAST:event_setPunchKeyPressed

    private void setKickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setKickActionPerformed
        // TODO add your handling code here:
        setFocus(setKick);
    }//GEN-LAST:event_setKickActionPerformed

    private void setKickKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_setKickKeyPressed
        // TODO add your handling code here:
        setKeybinding(setKick, evt);
    }//GEN-LAST:event_setKickKeyPressed

    private void desertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desertActionPerformed
        // TODO add your handling code here:
        game.setMap(desert.getText());
    }//GEN-LAST:event_desertActionPerformed

    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
        // TODO add your handling code here:
        if(!thread.isAlive()) {
            thread.start();
        }
        game.setFocusable(true);
        game.requestFocus();
        game.addKeyListener(game);
        game.addMouseListener(game);
    }//GEN-LAST:event_startActionPerformed

    private void cityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityActionPerformed
        // TODO add your handling code here:
        game.setMap(city.getText());
    }//GEN-LAST:event_cityActionPerformed

    private void boatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boatActionPerformed
        // TODO add your handling code here:
        game.setMap(boat.getText());
    }//GEN-LAST:event_boatActionPerformed
    
    /**
     * Sets focus on the button
     * @param button button to set focus on
     */
    void setFocus(javax.swing.JButton button) {
        button.setFocusable(true);
        button.requestFocus();
    }
    
    /**
     * 
     * @param button
     * @param evt 
     */
    void setKeybinding(javax.swing.JButton button, java.awt.event.KeyEvent evt) {
        javax.swing.JButton buttonLeft = setWalkLeft;
        javax.swing.JButton buttonRight = setWalkRight;
        javax.swing.JButton buttonKick = setKick;
        javax.swing.JButton buttonPunch = setPunch;
        System.out.println(evt.getKeyCode());
        String keyTyped = Character.toString(evt.getKeyChar());
        if(KeyEvent.CHAR_UNDEFINED == evt.getKeyChar() || KeyEvent.VK_SPACE == evt.getKeyCode() || KeyEvent.VK_ENTER == evt.getKeyCode()) {
            switch(evt.getKeyCode()) {
                case KeyEvent.VK_SPACE: keyTyped = "SPACE";
                    break;
                case KeyEvent.VK_TAB: keyTyped = "TAB";
                    break;
                case KeyEvent.VK_ENTER: keyTyped = "ENTER";
                    break;
                case KeyEvent.VK_SHIFT: keyTyped = "SHIFT";
                    break;
                case KeyEvent.VK_CONTROL: keyTyped = "CTRL";
                    break;
                case KeyEvent.VK_ALT: keyTyped = "ALT";
                    break;
            }
        }
        if(buttonLeft.equals(button)) {
            settings.setKeyCodeLeft(evt.getKeyChar());
        } else if(buttonRight.equals(button)) {
            settings.setKeyCodeRight(evt.getKeyChar());
        } else if(buttonKick.equals(button)) {
            settings.setKeyCodeKick(evt.getKeyChar());
        } else if(buttonPunch.equals(button)) {
            settings.setKeyCodePunch(evt.getKeyChar());
        }
        button.setText(keyTyped.toUpperCase());
        button.setFocusable(false);
        button.requestFocus();
    }
    
    /**
     * 
     * @param button
     * @param evt 
     */
    void checkKeybindings(javax.swing.JButton button, java.awt.event.KeyEvent evt) {
        JButton[] buttonList = new javax.swing.JButton[] {setWalkLeft, setWalkRight, setPunch, setKick};
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Window window = new Window();
                window.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boat;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton city;
    private javax.swing.JLabel controls;
    private javax.swing.JButton desert;
    private javax.swing.JPanel gamePanel;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JLabel kick;
    private javax.swing.JLabel mapOptions;
    private javax.swing.JButton multiplayer;
    private javax.swing.JLabel optionsAI;
    private javax.swing.JLabel punch;
    private javax.swing.JButton setKick;
    private javax.swing.JButton setPunch;
    private javax.swing.JButton setWalkLeft;
    private javax.swing.JButton setWalkRight;
    private javax.swing.JButton start;
    private javax.swing.JLabel walkLeft;
    private javax.swing.JLabel walkRight;
    // End of variables declaration//GEN-END:variables
}
